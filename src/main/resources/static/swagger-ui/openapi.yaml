openapi: 3.0.0
info:
  title: API de Residencias
  version: 1.0.0
  description: API para gestionar residencias, con operaciones de registro y consulta.

paths:
  /auth/signup:
    post:
      tags:
        - Authentication
        - User
      summary: Registrar un nuevo usuario
      description: Crea un nuevo usuario sin ser habilitado.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User.Dto'
      responses:
        '200':
          description: Usuario creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User.ResponseDto'
        '400':
          description: Datos nulos/vacios o problemas internos con el mail.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
                ERROR_MAIL_SENDER:
                  value:
                    mensaje: Error enviando el correo
                    codigo: 1020
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Residencia invalida, no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '406':
          description: Correo Invalido, tiene que ser un correo con extructura correcta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CORREO_INVALIDO:
                  value:
                    mensaje: Email invalid
                    codigo: 1002
                    status: 406
                    timestamp: 2025-04-13T21:00:0
        '409':
            description: Usuario ya existente
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error.ResponseDto'
                example:
                  USER_YA_EXISTE:
                    value:
                      mensaje: Usuario existente
                      codigo: 1014
                      status: 409
                      timestamp: 2025-04-13T21:00:0
  /auth/verify:
    post:
      tags:
        - Authentication
        - User
      summary: Activar un usuario ya creado pero sin estar activado
      description: Activa ese usuario para poder usar los endPoints.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verify.Dto'
      responses:
        '200':
          description: Mnesaje indicando que ya esta activada.
          content:
            text/plain:
              schema:
                type: string
                example: verificado
        '400':
          description: Datos nulos/vacios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Usuario invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalida
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '406':
          description: El codigo de verificaci贸n no es valido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CODIGO_INVALIDO:
                  value:
                    mensaje: El codigo de verificaci贸n no es valido
                    codigo: 1017
                    status: 406
                    timestamp: 2025-04-13T21:00:00
                CORREO_INVALIDO:
                  value:
                    mensaje: Email invalid
                    codigo: 1002
                    status: 406
                    timestamp: 2025-04-13T21:00:0
        '410':
          description: El codigo de verificaci贸n ha expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CODIGO_EXPIRADO:
                  value:
                    mensaje: El codigo de verificaci贸n ha expirado
                    codigo: 1016
                    status: 410
                    timestamp: 2025-04-13T21:00:0
  /auth/login:
    post:
      tags:
        - Authentication
        - User
      summary: Login para obtener token.
      description: el token es para acceder a todos los endPoints ya que estan protegidos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login.Dto'
      responses:
        '200':
          description: Logeo completado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login.ResponseDto'
        '400':
          description: Datos nulos/vacios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Usuario invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalida
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '406':
          description: Correo Invalido, tiene que ser un correo con extructura correcta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CORREO_INVALIDO:
                  value:
                    mensaje: Email invalid
                    codigo: 1002
                    status: 406
                    timestamp: 2025-04-13T21:00:0
                USUARIO_NO_ACTIVADO:
                  value:
                    mensaje: Usuario no activado
                    codigo: 1015
                    status: 406
                    timestamp: 2025-04-13T21:00:0

  /auth/resend:
    post:
      tags:
        - Authentication
        - User
      summary: Renviar correo verificacion Code
      description: manda un correo del ususario
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: correo enviado exitosamente
          content:
            text/plain:
              schema:
                type: string
                example: enviado.
        '400':
          description: Datos nulos/vacios o problemas al enviar correo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
                ERROR_MAIL_SENDER:
                  value:
                    mensaje: Error enviando el correo
                    codigo: 1020
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Usuario invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalida
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00

        '406':
          description: Correo Invalido, tiene que ser un correo con extructura correcta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CORREO_INVALIDO:
                  value:
                    mensaje: Email invalid
                    codigo: 1002
                    status: 406
                    timestamp: 2025-04-13T21:00:0
        '409':
          description: El usuario ya esta activado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CORREO_INVALIDO:
                  value:
                    mensaje: El ususario ya esta activado
                    codigo: 1018
                    status: 409
                    timestamp: 2025-04-13T21:00:0


  /resi/add:
    post:
      tags:
        - Residencia
      summary: Registrar una nueva residencia
      description: Crea una nueva residencia validando campos obligatorios, formato de correo y unicidad.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Residencia.Dto'
      responses:
        '201':
          description: Residencia registrada con 茅xito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Residencia.ResponseDto'
        '400':
          description: Datos del cuerpo nulos/vacios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0
        '406':
          description: Correo Invalido, tiene que ser un correo con extructura correcta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CORREO_INVALIDO:
                  value:
                    mensaje: Email invalid
                    codigo: 1002
                    status: 406
                    timestamp: 2025-04-13T21:00:0
        '409':
          description: Email o nombre que han sido ingreado en el cuerpo ya existen en otra residencia.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CORREO_DUPLICADO:
                  value:
                    mensaje: Email ya existente
                    codigo: 1003
                    status: 409
                    timestamp: 2025-04-13T21:00:00
                NOMBRE_DUPLICADO:
                  value:
                    mensaje: Nombre ya existente
                    codigo: 1004
                    status: 409
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/get:
    get:
      tags:
        - Residencia
      summary: Busca la residencia por id ingresado en el path
      description: Devuelve un dto Response con la residencia encontrada.
      security:
        - bearerAuth: []
      parameters:
        - name: idResidencia
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Residencia encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Residencia.ResponseDto'
        '400':
          description: Datos nulos/vacios de la variable de la url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Residencia invalida, no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/getAll:
    get:
      tags:
        - Residencia
      summary: Lista de residencias.
      description: Devuelve una lisra de residencias registradas en el sistema para que el que se ingrese un usuario nuevo.
      responses:
        '200':
          description: Residencia encontrada
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Residencia.PublicResponseDto'


  /resi/{idResidencia}/delete:
    delete:
      tags:
        - Residencia
      summary: Eliminar una Residencia existente.
      description: Elimina una residencia en cascada, con todas las entidades relacionadas a el.
      security:
        - bearerAuth: []
      parameters:
        - name: idResidencia
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Residencia borrada correctamente
        '404':
          description: Residencia invalida, no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/resident/add:
    post:
      tags:
        - Residente
      summary: Registrar un nuevo residente.
      description: Crea un residente en una residencia existente en la base de datos, con ciertos campos.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Residente.Dto'
      responses:
        '201':
          description: Residente registrado con existo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Residente.ResponseDto'
        '400':
          description: Datos del cuerpo nulos/vacios o de la variable del path idResidencia
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Residencia invalida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0
        '406':
          description: Fecha invalida o docuemnto de identidad invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                FECHA_INVALIDO:
                  value:
                    mensaje: Fecha invalida
                    codigo: 1005
                    status: 406
                    timestamp: 2025-04-13T21:00:00
                DOCUMENTO_INVALIDO:
                  value:
                    mensaje: Documento de identidad no tiene el formato correcto
                    codigo: 1027
                    status: 406
                    timestamp: 2025-04-13T21:00:00
        '409':
          description: El documento de identidad ya existe en la residencia
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                DOCUMENTO_DUPLICADO:
                  value:
                    mensaje: Documento de identidad ya existente
                    codigo: 1028
                    status: 409
                    timestamp: 2025-04-13T21:00:00

  /resi/resident/{idResidente}/get:
    get:
      tags:
        - Residente
      summary: Busca el residente por id ingresado en el path
      description: Devuelve un dto Response con el residente encontrada.
      security:
        - bearerAuth: []
      parameters:
        - name: idResidente
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Residente encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Residente.ResponseDto'
        '400':
          description: Datos nulos/vacios de la variable de la url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Residente invalido, no encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENTE_INVALIDO:
                  value:
                    mensaje: Residente invalida
                    codigo: 1009
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/resident/getAll:
    get:
      tags:
        - Residente
      summary: Obtener residentes
      description: Devuelve una lista de residentes.  Y filtrado por los sigueintes parametros. Hay que tener en cuenta sigue una proridad, documento de identidad, fecha de nacimiento y mes/a帽o
      security:
        - bearerAuth: []
      parameters:
        - name: documentoIdentidad
          in: query
          required: false
          schema:
            type: string
        - name: fechaNacimiento
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: year
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: month
          in: query
          required: false
          schema:
              type: integer
              format: int64
        - name: maxAge
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: minAge
          in: query
          required: false
          schema:
              type: integer
              format: int64
        - name: idJuego
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: idEventoSalida
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Residente(s) econtrado(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Residente.ResponseDto'
        '404':
          description: Residencia invalida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                value:
                  mensaje: Residencia invalida
                  codigo: 1006
                  status: 404
                  timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0
        '406':
          description: Rango de edad invalido, el minimo no puede ser mayor que el maximo.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RANGO_EDAD_INVALIDO:
                  value:
                    mensaje: Rango de edad invalido
                    codigo: 1029
                    status: 406
                    timestamp: 2025-04-13T21:00:00
  /resi/resident/getAll/bajas:
    get:
      tags:
        - Residente
      summary: Obtener residentes en baja
      description: Devuelve una lista de residentes en baja.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Residente(s) econtrado(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Residente.ResponseDto'
        '404':
          description: Residencia invalida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                value:
                  mensaje: Residencia invalida
                  codigo: 1006
                  status: 404
                  timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0


  /resi/resident/{idResidente}/delete:
    delete:
      tags:
        - Residente
      summary: Eliminar un Residente.
      description: Elimina un Residente en cascada, con todas las entidades relacionadas que dependan de el.
      security:
        - bearerAuth: []
      parameters:
        - name: idResidente
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Residente borrada

        '400':
          description: Campos nulos/vacios de las variable path
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Residente invalida, no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residente invalida
                    codigo: 1009
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/resident/{idResidente}/baja:
    patch:
      tags:
        - Residente
      summary: Dar de baja a un residente
      description: Cambia el estado de un residente a baja.
      security:
        - bearerAuth: []
      parameters:
        - name: idResidente
          in: query
          required: true
          schema:
              type: integer
              format: int64
      responses:
        '200':
          description: Residente dado de baja
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Residente.ResponseDto'
        '400':
          description: Campos nulos/vacios de las variable path
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Residencia invalida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                RESIDENTE_INVALIDO:
                  value:
                    mensaje: Residente invalida
                    codigo: 1009
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0
        '406':
          description: Residente ya dado de baja
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENTE_BAJA:
                  value:
                    mensaje: Residente ya dado de baja
                    codigo: 1028
                    status: 406
                    timestamp: 2025-04-13T21:00:00


  /resi/resident/{idResidente}/update:
    patch:
      tags:
        - Residente
      summary: Actualiza los datos de un residente
      description: Campos como nombre, apellido, documentoIdentidad, fecha de nacimiento.
      security:
        - bearerAuth: []
      parameters:
        - name: idResidente
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Residente.Dto'
      responses:
        '200':
          description: Residente actualizado
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/Residente.ResponseDto'
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

        '406':
          description: Documento de identidad invalido o fecha invalida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                FECHA_INVALIDO:
                  value:
                    mensaje: Fecha invalida
                    codigo: 1005
                    status: 406
                    timestamp: 2025-04-13T21:00:00
                DOCUMENTO_INVALIDO:
                  value:
                    mensaje: Documento de identidad no tiene el formato correcto
                    codigo: 1027
                    status: 406
                    timestamp: 2025-04-13T21:00:00
                RESIDENTE_BAJA:
                  value:
                    mensaje: Residente ya dado de baja
                    codigo: 1028
                    status: 406
                    timestamp: 2025-04-13T21:00:00
        '409':
          description: El documento de identidad ya existe en la residencia
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/Error.ResponseDto'
                example:
                    DOCUMENTO_DUPLICADO:
                    value:
                        mensaje: Documento de identidad ya existente
                        codigo: 1028
                        status: 409
                        timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/user/{idUser}/get:
    get:
      tags:
        - User
      summary: Obtener usuario
      description: Busca el usuario por id ingresado en el path.
      parameters:
        - name: idResidencia
          in: query
          required: true
          schema:
              type: integer
              format: int64
        - name: idUser
          in: query
          required: true
          schema:
              type: integer
              format: int64
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User.ResponseDto'
        '400':
          description: Datos nulos/vacios de la variable de la url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                value:
                  mensaje: Faltan campos obligatorios
                  codigo: 1001
                  status: 400
                  timestamp: 2025-04-13T21:00:00
        '404':
          description: Usuario invalido, no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalido
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/{idResidencia}/user/getAll:
    get:
      tags:
        - User
      summary: Obtener ususarios.
      description: Devuelve una lista de residentes. Con filtrado.
      parameters:
        - name: idResidencia
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: enabled
          in: query
          required: false
          schema:
            type: boolean
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: idJuego
          in: query
          required: false
          schema:
              type: integer
              format: int64
      responses:
        '200':
          description: Usuario(s) econtrado(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User.ResponseDto'
        '400':
          description: Campos nulos/vacios de la variable de la url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Residencia invalida, no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/user/{idUser}/delete:
    delete:
      tags:
          - User
      summary: Eliminar un Usuario.
      description: Elimina un usuario en cascada, con todas las entidades relacionadas a el. Pero el registro de jeugo no se borra
      parameters:
        - name: idResidencia
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: idUser
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Usuario borrado
        '400':
          description: campos nulos/vacios de la variable de la url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Usuario invalido, no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalido
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:00
        '409':
          description: Esta entidad tiene referencias asociadas que dependen de el
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                REFERENCIAS_DEPENDIENTES:
                  value:
                    mensaje: Esta entidad tiene referencias asociadas que dependen de el.
                    codigo: 1013
                    status: 409
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/user/{idUser}/delete/referencies:
    delete:
      tags:
        - User
      summary: Borrar la relacion usuario.
      description: Borra y pone a null el parametro relacionado en el registro de juego.
      parameters:
        - name: idResidencia
          in: query
          required: true
        - name: idUser
          in: query
          required: true
      responses:
        '204':
          description: Relaciones eliminadas.
        '400':
          description: campos nulos/vacios de la variable de la url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Usuario invalido, no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalido
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/user/defaultImage:
    get:
      tags:
        - User
      summary: Obtienes foto perfil
      description: Obten el recurso default del img defecto del personaje .png
      parameters:
        - name: idResidencia
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Recurso .PNG en binario con la imagen default de perfil.

  /resi/{idResidencia}/user/{idUser}/update:
    patch:
      tags:
        - User
      summary: Actualizar valores del user.
      description: Actualiza nombre, apellido y correo, no password (al hacer esto, se debe vovlver hacer el login por el token.)
      parameters:
        - name: idResidencia
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: idUser
          in: query
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate.Dto"
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User.ResponseDto'
        '400':
          description: Campos nulos/vacios de la variable de la url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Usuario invalido, no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalido
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '406':
          description: correo invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CORREO_INVALIDO:
                  value:
                    mensaje: Email invalid
                    codigo: 1002
                    status: 406
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:00
        '409':
          description: Correo duplicado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CORREO_DUPLICADO:
                  value:
                    mensaje: El correo ya existe en la base de datos.
                    codigo: 1003
                    status: 409
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/user/{idUser}/update/changePassword:
    patch:
      tags:
        - User
      summary: Actualizar password
      description: Cambia la contrase帽a de un usuario.
      parameters:
        - name: idResidencia
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: idUser
          in: query
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdatePassword.Dto"
      responses:
        '200':
          description: Password actualizado correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User.ResponseDto'
        '400':
          description: Campos nulos/vacios de la variable de la url o del requestBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Usuario invalido, no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalido
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:00
        '406':
          description: Password invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                PASSWORD_INVALIDO:
                value:
                  mensaje: Contrase帽a invalida
                  codigo: 1029
                  status: 406
                  timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/juego/add:
    post:
      tags:
        - Modulo - JUEGO
      summary: Registrar un juego.
      description: Crea un nuevo Juego validando campos obligatiorios, unicidad y que la residencia donde se guarda exista.
      parameters:
        - name: idResidencia
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Juego.Dto'
      responses:
        '201':
          description: Juego registrado con 茅xisto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Juego.ResponseDto'
        '400':
          description: Datos nulos/vacios o del bodyRequest o de la url.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00

        '404':
          description: Residencia invalida, no existe en la base de datos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0
        '409':
          description: El nombre que se le quiere asignar ya esrta registrado en esa residendcia
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                NOMBRE_DUPLICADO:
                  value:
                    mensaje: Nombre ya existente
                    codigo: 1004
                    status: 409
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/juego/{idJuego}/get:
    get:
      tags:
        - Modulo - JUEGO
      summary: Obtener juego
      description: Devuelve un juego.
      parameters:
        - name: idResidencia
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: idJuego
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Juego(s) encontrado(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Juego.ResponseDto'
        '400':
          description: Datos nulos/vacios de la variable de la url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Juego invalida, no existe en la base de datos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                JUEGO_INVALIDO:
                  value:
                    mensaje: Juego invalida
                    codigo: 1008
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/{idResidencia}/juego/getAll:
    get:
      tags:
        - Modulo - JUEGO
      summary: Obtener lista de juego
      description: Devuelve una lista de juegos.
      parameters:
        - name: idResidencia
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JuegoFiltre.Dto'
      responses:
        '200':
          description: Juego(s) encontrado(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Juego.ResponseDto'
        '400':
          description: Datos nulos/vacios de la variable de la url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Residencia invalida, no existe en la base de datos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/{idResidencia}/juego/{idJuego}/delete:
    delete:
      tags:
        - Modulo - JUEGO
      summary: Eliminar una Juego.
      description: Elimina un juego en cascada, con todas las entidades relacionadas a el.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: idJuego
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Juego borrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Juego.ResponseDto'
        '400':
          description: Datos nulos/vacios de la variable de la url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Juego invalido, no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Juego invalido
                    codigo: 1008
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/juego/{idJuego}/update:
    patch:
      tags:
        - Modulo - JUEGO
      summary: Actualizar un juego.
      description: Actualiza el nombre del juego, y la imagen.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: idJuego
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JuegoUpdate.Dto'
      responses:
        '200':
          description: Juego actualizado con 茅xito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Juego.ResponseDto'
        '400':
          description: Datos nulos/vacios de la variable de la url o del bodyRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00

        '404':
          description: Juego invalida, no existe en la base de datos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Juego invalida
                    codigo: 1008
                    status: 404
                    timestamp: 2025-04-13T21:00:00

        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:00
        '409':
          description: El nombre ya existe en otro evento de la residencia
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                NOMBRE_DUPLICADO:
                value:
                  mensaje: Nombre ya existente
                  codigo: 1004
                  status: 409
                  timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/juego/{idJuego}/registro/add:
    post:
      tags:
        - Modulo - JUEGO
      summary: Registrar un nuevo registro de juego.
      description: Crea un nuevo registro de juego validando campos obligatorios,existencia de las referencias y valores validos.
      security:
        - bearerAuth: []
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idJuego
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistroJuego.Dto'
      responses:
        '201':
          description: Registro de juego registrado con 茅xito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistroJuego.ResponseDto'
        '400':
          description: Datos nulos/vacios .
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00

        '404':
          description: Juego, Residente o Usuario invalido, no esixte ninguna referencia en la base de datos de estas entidades
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                JUEGO_INVALIDO:
                  value:
                    mensaje: Juego invalida
                    codigo: 1008
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                RESIDENTE_INVALIDO:
                  value:
                    mensaje: Residente invalida
                    codigo: 1009
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalida
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0
        '406':
          description: No valores negativos en el el campo de puntos/num
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                VALORES_NEGATIVOS:
                  value:
                    mensaje: No puede ser valores negativos
                    codigo: 1007
                    status: 406
                    timestamp: 2025-04-13T21:00:00

        '409':
          description: Conflicto con las referencias de la residencia, no coinciden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CONFLICTO_REFERENCIAS:
                  value:
                    mensaje: Problemas con las referencias de las entidades, no corresponden a las mismas
                    codigo: 1011
                    status: 409
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/juego/{idJuego}/registro/{idRegistroJuego}/get:
    get:
      tags:
        - Modulo - JUEGO
      summary: Obtener registro de juego
      description: Devuelve los datos de una partida espec铆fica.
      security:
        - bearerAuth: []
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idJuego
          in: path
          required: true
          schema:
            type: integer
        - name: idRegistroJuego
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Registro encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistroJuego.ResponseDto'
        '400':
          description: Datos nulos/vacios .
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: juego/ registro_juego invalido, no existe en la base de datos.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                JUEGO_INVALIDO:
                  value:
                    mensaje: Juego invalida
                    codigo: 1008
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                REGISTRO_JUEGO_INVALIDO:
                  value:
                    mensaje: Registro Juego invalido
                    codigo: 1012
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/juego/{idJuego}/dificultad/{dificultad}/getAll:
    get:
      tags:
        - Modulo - JUEGO
      summary: Listar registros por dificultad
      description: Lista registros por dificultad y filtros opcionales.
      security:
        - bearerAuth: []
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idJuego
          in: path
          required: true
          schema:
            type: integer
        - name: dificultad
          in: path
          required: true
          schema:
            type: string
            enum: [ FACIL, MEDIO, DIFICIL ]
        - name: idResidente
          in: query
          schema:
            type: integer
        - name: idUser
          in: query
          schema:
            type: integer
        - name: year
          in: query
          schema:
            type: integer
        - name: month
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Lista de registros encontrada
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegistroJuego.ResponseDto'
        '400':
          description: Datos nulos/vacios .
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Juego, Residente o Usuario invalido, no esixte ninguna referencia en la base de datos de estas entidades
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                JUEGO_INVALIDO:
                  value:
                    mensaje: Juego invalida
                    codigo: 1008
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                RESIDENTE_INVALIDO:
                  value:
                    mensaje: Residente invalida
                    codigo: 1009
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalida
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/juego/{idJuego}/registro/{idRegistroJuego}/addComment:
    patch:
      tags:
        - Modulo - JUEGO
      summary: A帽adir comentario a registro
      description: Actualiza la observaci贸n/comentario del registro.
      security:
        - bearerAuth: []
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idJuego
          in: path
          required: true
          schema:
            type: integer
        - name: idRegistroJuego
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistroJuego.UpdateDto'
      responses:
        '200':
          description: Comentario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistroJuego.ResponseDto'
        '400':
          description: Datos nulos/vacios .
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: juego/ registro_juego invalido, no existe en la base de datos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                JUEGO_INVALIDO:
                  value:
                    mensaje: Juego invalida
                    codigo: 1008
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                REGISTRO_JUEGO_INVALIDO:
                  value:
                    mensaje: Registro Juego invalido
                    codigo: 1012
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/juego/{idJuego}/registro/{idRegistroJuego}/delete:
    delete:
      tags:
        - Modulo - JUEGO
      summary: Eliminar registro de juego
      description: Elimina un registro de juego de forma permanente.
      security:
        - bearerAuth: []
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idJuego
          in: path
          required: true
          schema:
            type: integer
        - name: idRegistroJuego
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Registro eliminado correctamente
        '400':
          description: Datos nulos/vacios .
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: juego/ registro_juego invalido, no existe en la base de datos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                JUEGO_INVALIDO:
                  value:
                    mensaje: Juego invalida
                    codigo: 1008
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                REGISTRO_JUEGO_INVALIDO:
                  value:
                    mensaje: Registro Juego invalido
                    codigo: 1012
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:00



  /resi/{idResidencia}/evento/{idSalida}/participante/add:
    post:
      tags:
        - Modulo Evento Salida
      summary: A帽adir un participante
      description: Registra un nuevo participante en un evento de salida.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idSalida
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participante.Dto'
      responses:
        '200':
          description: Participante a帽adido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participante.ResponseDto'
        '400':
          description: Datos nulos/vacios o el evento no esta disponible.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
                EVENTO_SALIDA_NO_DISPONIBLE:
                  value:
                    mensaje: No se puede hacer nada con este evento ciertos problemas
                    codigo: 1024
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Evento/Residente no existe en esa residencia.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                EVENTO_SALIDA_INVALIDO:
                  value:
                    mensaje: Evento de salida invalido
                    codigo: 1023
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                RESIDENTE_INVALIDO:
                  value:
                    mensaje: Residente invalido
                    codigo: 1009
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '406':
          description: Este residente ya participa en otro evento ese mismo dia
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                PARTICIPANTE_REGISTRADO:
                  value:
                    mensaje: Este residente ya participa en otro evento ese mismo dia
                    codigo: 1022
                    status: 406
                    timestamp: 2025-04-13T21:00:00


  /resi/{idResidencia}/evento/{idSalida}/participante/{idParticipante}/get:
    get:
      tags:
        - Modulo Evento Salida
      summary: Obtener un participante
      description: Obtiene los datos de un participante espec铆fico en un evento de salida.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idSalida
          in: path
          required: true
          schema:
            type: integer
        - name: idParticipante
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Participante encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participante.ResponseDto'
        '400':
          description: campos nulos/vacios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Evento/Participante no  existe en esa residencia.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                EVENTO_SALIDA_INVALIDO:
                  value:
                    mensaje: Evento de salida invalido
                    codigo: 1023
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                PARTICIPANTE_INVALIDO:
                  value:
                    mensaje: Participante invalido
                    codigo: 1025
                    status: 404
                    timestamp: 2025-04-13T21:00:00
  /resi/{idResidencia}/evento/{idSalida}/participante/getAll:
    get:
      tags:
        - Modulo Evento Salida
      summary: Listar participantes
      description: Lista todos los participantes de un evento de salida, con filtros opcionales.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idSalida
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participante.GetDto'
      responses:
        '200':
          description: Lista de participantes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participante.ResponseDto'
        '400':
          description: Campos nulos/vacios.
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/Error.ResponseDto'
                example:
                  CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Evento invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                EVENTO_SALIDA_INVALIDO:
                  value:
                    mensaje: Evento de salida invalido
                    codigo: 1023
                    status: 404
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/evento/{idSalida}/participante/{idParticipante}/update:
    patch:
      tags:
        - Modulo Evento Salida
      summary: Actualizar participante
      description: Actualiza los datos de un participante existente en un evento de salida.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idSalida
          in: path
          required: true
          schema:
            type: integer
        - name: idParticipante
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participante.UpdateDto'
      responses:
        '200':
          description: Participante actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participante.ResponseDto'
        '400':
          description: campos nulos/vacios o el evento no esta disponible.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
                EVENTO_SALIDA_NO_DISPONIBLE:
                  value:
                    mensaje: No se puede hacer nada con este evento ciertos problemas
                    codigo: 1024
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Evento/Particicpante Invalido
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                EVENTO_SALIDA_INVALIDO:
                  value:
                    mensaje: Evento de salida invalido
                    codigo: 1023
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                PARTICIPANTE_INVALIDO:
                  value:
                    mensaje: Participante invalido
                    codigo: 1025
                    status: 404
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/evento/{idSalida}/participante/{idParticipante}/delete:
    delete:
      tags:
        - Modulo Evento Salida
      summary: Eliminar participante
      description: Elimina un participante de un evento de salida.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idSalida
          in: path
          required: true
          schema:
            type: integer
        - name: idParticipante
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Participante eliminado correctamente
        '404':
          description: Evento/Particicpante Invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                EVENTO_SALIDA_INVALIDO:
                  value:
                    mensaje: Evento de salida invalido
                    codigo: 1023
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                PARTICIPANTE_INVALIDO:
                  value:
                    mensaje: Participante invalido
                    codigo: 1025
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '406':
          description: Participante inmutable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                PARTICIPANTE_INMUTABLE:
                  value:
                    mensaje: No se puede hacer esta operacion con el participante porque ahora mismo es inmutable
                    codigo: 1026
                    status: 406
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/evento/add:
    post:
      tags:
        - Modulo Evento Salida
      summary: Crear un nuevo evento de salida
      description: Crea un nuevo evento de salida asociado a una residencia.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventoSalida.Dto'
      responses:
        '200':
          description: Evento de salida creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventoSalida.ResponseDto'
        '400':
          description: datos nulos/vacios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Residencia invalida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                value:
                  mensaje: Residencia invalida
                  codigo: 1006
                  status: 404
                  timestamp: 2025-04-13T21:00:00
        '406':
          description: Fecha invalida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                FECHA_INVALIDA:
                value:
                  mensaje: La fecha no es valida
                  codigo: 1005
                  status: 406
                  timestamp: 2025-04-13T21:00:00
        '409':
          description: El nombre ya existe en otro evento de la residencia
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error.ResponseDto'
                example:
                  NOMBRE_DUPLICADO:
                  value:
                    mensaje: Nombre ya existente
                    codigo: 1004
                    status: 409
                    timestamp: 2025-04-13T21:00:00
  /resi/{idResidencia}/evento/{idEventoSalida}/update:
    patch:
      tags:
        - Modulo Evento Salida
      summary: Actualizar un evento de salida
      description: Actualiza la fecha y el estado de un evento de salida existente.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: idEventoSalida
          in: path
          required: true
          schema:
            type: integer
            example: 10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventoSalida.UpdateDto'
      responses:
        '200':
          description: Evento de salida actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventoSalida.ResponseDto'
        '400':
          description: datos nulos/vacios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                value:
                  mensaje: Faltan campos obligatorios
                  codigo: 1001
                  status: 400
                  timestamp: 2025-04-13T21:00:00
        '404':
          description: Evento invalido.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                EVENTO_SALIDA_INVALIDO:
                value:
                  mensaje: Evento de salida invalido
                  codigo: 1023
                  status: 404
                  timestamp: 2025-04-13T21:00:00
  /resi/{idResidencia}/evento/{idEventoSalida}/delete:
    delete:
      tags:
        - Modulo Evento Salida
      summary: Eliminar un evento de salida
      description: Elimina un evento de salida, incluyendo sus participantes asociados.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idEventoSalida
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Evento de salida eliminado correctamente
        '400':
          description: Campos nulos/vacios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                value:
                  mensaje: Faltan campos obligatorios
                  codigo: 1001
                  status: 400
                  timestamp: 2025-04-13T21:00:00
        '404':
          description: Evento invalido.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                EVENTO_SALIDA_INVALIDO:
                  value:
                    mensaje: Evento de salida invalido
                    codigo: 1023
                    status: 404
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/evento/{idEventoSalida}/get:
    get:
      tags:
        - Modulo Evento Salida
      summary: Obtener un evento de salida
      description: Obtiene los datos de un evento de salida espec铆fico.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: idEventoSalida
          in: path
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Datos del evento de salida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventoSalida.ResponseDto'
        '400':
          description: Campos nulos/vacios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Evento invalido.
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error.ResponseDto'
                example:
                  EVENTO_SALIDA_INVALIDO:
                    value:
                      mensaje: Evento de salida invalido
                      codigo: 1023
                      status: 404
                      timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/evento/getAll:
    get:
      tags:
        - Modulo Evento Salida
      summary: Listar eventos de salida
      description: Lista todos los eventos de salida de una residencia, con filtros opcionales.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventoSalida.GetDto'
      responses:
        '200':
          description: Lista de eventos de salida
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventoSalida.ResponseDto'
        '400':
          description: Campos nulos/vacios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Residencia invalida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00

components:
  schemas:
    Verify.Dto:
      type: object
      required:
        -email
        -verificationConde
      properties:
        email:
          type: string
          example: kevinolarte.ko@gmail.com
        verificationCode:
          type: string
          example: 6394829

    Login.Dto:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: contacto@resilapaz.com
        password:
          type: string
          example: 1234Residencia

    Login.ResponseDto:
      type: object
      required:
        - token
        - expiresIn
      properties:
        token:
          type: string
          example: yJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6Imtldmlub2xhcnRlLmtvQGdtYWlsLmNvbSIsInN1YiI6Imtldmlub2xhcnRlLmtvQGdtYWlsLmNvbSIsImlhdCI6MTc0NTA3NTc1NywiZXhwIjoxNzQ1MTYyMTU3fQ._jxW3tu7hG8NPVPZaNc6iMS5HjAyiQycUZl4SFc_a8
        expiresIn:
          type: integer
          format: int64
          example: 6400000

    Residencia.Dto:
      type: object
      required:
        - nombre
        - email
      properties:
        nombre:
          type: string
          example: Residencia La Paz
        email:
          type: string
          example: contacto@resilapaz.com

    Residencia.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nombre:
          type: string
          example: Residencia La Paz
        email:
          type: string
          example: contacto@resilapaz.com

    Residencia.PublicResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nombre:
          type: string
          example: Residencia La Paz
        email:
          type: string
          example: contacto@resilapaz.com

    Residente.Dto:
      type: object
      required:
        - nombre
        - apellido
        - fechaNacimiento
        - idResidencia
        - documentoIdentidad
      properties:
        nombre:
          type: string
          example: Carlos
        apellido:
          type: string
          example: P茅rez
        fechaNacimiento:
          type: string
          format: date
          example: 1945-06-15
        idResidencia:
          type: integer
          format: int64
          example: 1
        documentoIdentidad:
            type: string
            example: Y8440460X

    Residente.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 101
        nombre:
          type: string
          example: Carlos
        apellido:
          type: string
          example: P茅rez
        fechaNacimiento:
          type: string
          format: date
          example: 1945-06-15
        idResidencia:
          type: integer
          format: int64
          example: 1
        documentoIdentidad:
          type: string
          example: Y8440460X
        baja:
          type: boolean
          example: false

    User.Dto:
      type: object
      required:
        - nombre
        - apellido
        - email
        - password
        - idResidencia
      properties:
        nombre:
          type: string
          example: Juan
        apellido:
          type: string
          example: Garc铆a
        email:
          type: string
          format: email
          example: juan.garcia@ejemplo.com
        password:
          type: string
          example: 1234secure
        idResidencia:
          type: integer
          format: int64
          example: 2

    UserUpdate.Dto:
      type: object
      properties:
        nombre:
          type: string
          example: Juan
        apellido:
          type: string
          example: Garcia
        email:
          type: string
          example: juan.garcia@ejemplo.com

    UserUpdatePassword.Dto:
        type: object
        required:
          - oldPassword
          - newPassword
        properties:
          oldPassword:
            type: string
            example: 1234secure
          newPassword:
            type: string
            example: 1234newsecure



    User.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5
        nombre:
          type: string
          example: Juan
        apellido:
          type: string
          example: Garc铆a
        email:
          type: string
          format: email
          example: juan.garcia@ejemplo.com
        enabled:
          type: boolean
          example: true
        idResidencia:
          type: integer
          format: int64
          example: 2

    Juego.Dto:
      type: object
      required:
        - nombre
      properties:
        nombre:
          type: string
          example: Memoria Visual

    JuegoFiltre.Dto:
      type: object
      properties:
        nombre:
          type: string
          example: tres en ralla
        maxRegistro:
          type: boolean
          example: true
    Juego.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nombre:
          type: string
          example: Memoria Visual
        idResidencia:
          type: integer
          format: int64
          example: 3

    JuegoUpdate.Dto:
      type: object
      properties:
          nombre:
            type: string
            example: Memoria Visual

    RegistroJuego.Dto:
      type: object
      properties:
        idResidente:
          type: integer
          format: int64
          example: 5
        idUsuario:
          type: integer
          format: int64
          example: 3
        num:
          type: integer
          example: 2
        duracion:
          type: number
          format: double
          example: 120.5
        dificultad:
          type: string
          enum: [ FACIL, MEDIA, DIFICIL ]
          example: MEDIA

    RegistroJuego.UpdateDto:
      type: object
      properties:
        observacion:
          type: string
          example: Muy lento

    RegistroJuego.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 42
        idResidente:
          type: integer
          format: int64
          example: 5
        idJuego:
          type: integer
          format: int64
          example: 1
        idUsario:
          type: integer
          format: int64
          example: 3
        num:
          type: integer
          example: 2
        duracion:
          type: number
          format: double
          example: 120.5
        dificultad:
          type: integer
          format: int64
          example: 1
        fecha:
          type: string
          format: date-time
          example: "2025-04-16T10:15:30"

    Participante.Dto:
      type: object
      properties:
        idResidente:
          type: integer
          example: 1
        asistencia:
          type: boolean
          example: true
        preOpinion:
          type: string
          example: Me va gustar mucho

    Participante.GetDto:
      type: object
      properties:
        asistencia:
          type: boolean
          example: true

    Participante.UpdateDto:
      type: object
      properties:
        asistencia:
          type: boolean
          example: true
        preOpinion:
          type: string
          example: Me va gustar mucho
        postOpinion:
            type: string
            example: Me gusto mucho

    Participante.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        idSalida:
            type: integer
            example: 1
        idResidente:
            type: integer
            example: 1
        ayuda:
            type: boolean
            example: true
        preOpinion:
            type: string
            example: Me va gustar mucho
        postOpinion:
            type: string
            example: Me gusto mucho

    EventoSalida.Dto:
      type: object
      properties:
        nombre:
          type: string
          example: Excursi贸n al parque
        descripcion:
          type: string
          example: Salida al parque municipal con los residentes.
        fecha:
          type: string
          format: date
          example: 2025-05-15

    EventoSalida.GetDto:
      type: object
      properties:
        fecha:
          type: string
          format: date
          example: 2025-05-15
        estado:
          type: string
          enum: [ ABIERTA, REALIZADA, CANCELADA ]

    EventoSalida.UpdateDto:
      type: object
      properties:
        nombre:
          type: string
          example: Excursi贸n al parque
        descripcion:
          type: string
          example: Salida al parque municipal con los residentes.
        fecha:
          type: string
          format: date
          example: 2025-05-15
        estado:
          type: string
          enum: [ ABIERTA, REALIZADA, CANCELADA ]

    EventoSalida.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          example: 10
        nombre:
          type: string
          example: Excursi贸n al parque
        descripcion:
          type: string
          example: Salida al parque municipal con los residentes.
        fechaInicio:
          type: string
          format: date
          example: 2025-05-15
        estado:
          type: string
          enum: [ ABIERTA, REALIZADA, CANCELADA ]
        residenciaId:
          type: integer
          example: 1

    Error.ResponseDto:
      type: object
      properties:
        mensaje:
          type: string
        codigo:
          type: integer
        status:
          type: integer
        timestamp:
          type: string
          format: date-time
      example:
        mensaje: Faltan campos obligatorios
        codigo: 1001
        status: 400
        timestamp: 2025-04-13T21:00:00

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT