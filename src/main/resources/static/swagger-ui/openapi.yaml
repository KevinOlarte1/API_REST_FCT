openapi: 3.0.0
info:
  title: API de Residencias
  version: 1.0.0
  description: API para gestionar residencias, con operaciones de registro y consulta.

paths:
  /resi/add:
    post:
      summary: Registrar una nueva residencia
      description: Crea una nueva residencia validando campos obligatorios, formato de correo y unicidad.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResidenciaDto'
      responses:
        '200':
          description: Residencia registrada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResidenciaResponseDto'
        '400':
          description: Error de validación o datos nulos/vacios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
              examples:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
                CORREO_INVALIDO:
                  value:
                    mensaje: Email invalid
                    codigo: 1002
                    status: 400
                    timestamp: 2025-04-13T21:00:00

        '409':
          description: "Email o nombre ya existe"
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
              examples:
                CORREO_DUPLICADO:
                  value:
                    mensaje: Email ya existente
                    codigo: 1003
                    status: 409
                    timestamp: 2025-04-13T21:00:00
                NOMBRE_DUPLICADO:
                  value:
                    mensaje: Nombre ya existente
                    codigo: 1004
                    status: 409
                    timestamp: 2025-04-13T21:00:00

  /resi:
    get:
      summary: Obtener residencias
      description: Devuelve una lista de residencias. Si se indica un ID, devuelve solo esa residencia.
      parameters:
        - name: idResidencia
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Residencia(s) encontrada(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResidenciaResponseDto'
        '400':
          description: Error al recuperar residencias
          content:
            application/json:
              schema:

  /resi/residents/add:
    post:
      summary: Registrar un nuevo residente
      description: Crea un residente en una residencia existente en la base de datos, con ciertos campos.
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/ResidenteDto'
      responses:
        '200':
          description: Residente registrado con existo
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/ResidenteResponseDto'
        '400':
          description: Error de validacion o campos nulos
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
              examples:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
                FECHA_INVALIDO:
                  value:
                    mensaje: Fecha invalida
                    codigo: 1005
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '409':
          description: La residencia que se quiere asignar no existe
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 400
                    timestamp: 2025-04-13T21:00:00

  /resi/residents:
    get:
      summary: Obtener residentes
      description: Devuelve una lista de residentes. Si pones el id del residente te de vuelve solo el residnete. Si pones el id de la residencia te devuelve una lsita de residentes de esa residencia.
      parameters:
        - name: idResidencia
          in:  query
          required: false
          schema:
            type: integer
            format: int64
        - name: idResidente
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Residente(s) econtrado(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResidenteResponseDto'
        '400':
          description: Error al recuperar residentes
          content:
            application/json:
              schema:


components:
  schemas:
    ResidenciaDto:
      type: object
      required:
        - nombre
        - email
      properties:
        nombre:
          type: string
          example: Residencia La Paz
        email:
          type: string
          example: contacto@resilapaz.com

    ResidenciaResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nombre:
          type: string
          example: Residencia La Paz
        email:
          type: string
          example: contacto@resilapaz.com
    ResidenteDto:
      type: object
      required:
        - nombre
        - apellido
        - fechaNacimiento
        - idResidencia
      properties:
        nombre:
          type: string
          example: Carlos
        apellido:
          type: string
          example: Pérez
        fechaNacimiento:
          type: string
          format: date
          example: 1945-06-15
        idResidencia:
          type: integer
          format: int64
          example: 1

    ResidenteResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 101
        nombre:
          type: string
          example: Carlos
        apellido:
          type: string
          example: Pérez
        fechaNacimiento:
          type: string
          format: date
          example: 1945-06-15
        idResidencia:
          type: integer
          format: int64
          example: 1

    ErrorResponseDto:
      type: object
      properties:
        mensaje:
          type: string
        codigo:
          type: integer
        status:
          type: integer
        timestamp:
          type: string
          format: date-time
      example:
        mensaje: Faltan campos obligatorios
        codigo: 1001
        status: 400
        timestamp: 2025-04-13T21:00:00

