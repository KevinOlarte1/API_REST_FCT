openapi: 3.0.0
info:
  title: API de Residencias
  version: 1.0.0
  description: API para gestionar residencias, con operaciones de registro y consulta.

paths:
  /auth/signup:
    post:
      tags:
        - Authentication
        - User
      summary: Registrar un nuevo usuario
      description: Crea un nuevo usuario sin ser habilitado.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User.Dto'
      responses:
        '200':
          description: Usuario creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User.ResponseDto'
        '400':
          description: Datos nulos/vacios o problemas internos con el mail.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
                ERROR_MAIL_SENDER:
                  value:
                    mensaje: Error enviando el correo
                    codigo: 1020
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Residencia invalida, no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '406':
          description: Correo Invalido, tiene que ser un correo con extructura correcta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CORREO_INVALIDO:
                  value:
                    mensaje: Email invalid
                    codigo: 1002
                    status: 406
                    timestamp: 2025-04-13T21:00:0
        '409':
            description: Usuario ya existente
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error.ResponseDto'
                example:
                  USER_YA_EXISTE:
                    value:
                      mensaje: Usuario existente
                      codigo: 1014
                      status: 409
                      timestamp: 2025-04-13T21:00:0
  /auth/verify:
    post:
      tags:
        - Authentication
        - User
      summary: Activar un usuario ya creado pero sin estar activado
      description: Activa ese usuario para poder usar los endPoints.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verify.Dto'
      responses:
        '200':
          description: Mnesaje indicando que ya esta activada.
          content:
            text/plain:
              schema:
                type: string
                example: verificado
        '400':
          description: Datos nulos/vacios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Usuario invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalida
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '406':
          description: El codigo de verificaci贸n no es valido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CODIGO_INVALIDO:
                  value:
                    mensaje: El codigo de verificaci贸n no es valido
                    codigo: 1017
                    status: 406
                    timestamp: 2025-04-13T21:00:00
                CORREO_INVALIDO:
                  value:
                    mensaje: Email invalid
                    codigo: 1002
                    status: 406
                    timestamp: 2025-04-13T21:00:0
        '410':
          description: El codigo de verificaci贸n ha expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CODIGO_EXPIRADO:
                  value:
                    mensaje: El codigo de verificaci贸n ha expirado
                    codigo: 1016
                    status: 410
                    timestamp: 2025-04-13T21:00:0
  /auth/login:
    post:
      tags:
        - Authentication
        - User
      summary: Login para obtener token.
      description: el token es para acceder a todos los endPoints ya que estan protegidos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login.Dto'
      responses:
        '200':
          description: Logeo completado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login.ResponseDto'
        '400':
          description: Datos nulos/vacios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Usuario invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalida
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '406':
          description: Correo Invalido, tiene que ser un correo con extructura correcta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CORREO_INVALIDO:
                  value:
                    mensaje: Email invalid
                    codigo: 1002
                    status: 406
                    timestamp: 2025-04-13T21:00:0
                USUARIO_NO_ACTIVADO:
                  value:
                    mensaje: Usuario no activado
                    codigo: 1015
                    status: 406
                    timestamp: 2025-04-13T21:00:0

  /auth/resend:
    post:
      tags:
        - Authentication
        - User
      summary: Renviar correo verificacion Code
      description: manda un correo del ususario
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: correo enviado exitosamente
          content:
            text/plain:
              schema:
                type: string
                example: enviado.
        '400':
          description: Datos nulos/vacios o problemas al enviar correo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
                ERROR_MAIL_SENDER:
                  value:
                    mensaje: Error enviando el correo
                    codigo: 1020
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Usuario invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalida
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00

        '406':
          description: Correo Invalido, tiene que ser un correo con extructura correcta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CORREO_INVALIDO:
                  value:
                    mensaje: Email invalid
                    codigo: 1002
                    status: 406
                    timestamp: 2025-04-13T21:00:0
        '409':
          description: El usuario ya esta activado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CORREO_INVALIDO:
                  value:
                    mensaje: El ususario ya esta activado
                    codigo: 1018
                    status: 409
                    timestamp: 2025-04-13T21:00:0













  /resi/add:
    post:
      tags:
        - Residencia
      summary: Registrar una nueva residencia
      description: Crea una nueva residencia validando campos obligatorios, formato de correo y unicidad.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Residencia.Dto'
      responses:
        '200':
          description: Residencia registrada con 茅xito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Residencia.ResponseDto'
        '400':
          description: Datos nulos/vacios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0
        '406':
          description: Correo Invalido, tiene que ser un correo con extructura correcta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CORREO_INVALIDO:
                  value:
                    mensaje: Email invalid
                    codigo: 1002
                    status: 406
                    timestamp: 2025-04-13T21:00:0
        '409':
          description: Email o nombre ya existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CORREO_DUPLICADO:
                  value:
                    mensaje: Email ya existente
                    codigo: 1003
                    status: 409
                    timestamp: 2025-04-13T21:00:00
                NOMBRE_DUPLICADO:
                  value:
                    mensaje: Nombre ya existente
                    codigo: 1004
                    status: 409
                    timestamp: 2025-04-13T21:00:00

  /resi:
    get:
      tags:
        - Residencia
      summary: Obtener residencias
      description: Devuelve una lista de residencias. Si se indica un ID, devuelve solo esa residencia.
      parameters:
        - name: idResidencia
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Residencia(s) encontrada(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Residencia.ResponseDto'
        '400':
          description: Error al recuperar residencias
          content:
            application/json:
              schema:
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/remove:
    delete:
      tags:
        - Residencia
      summary: Eliminar una Residencia existente.
      description: Elimina una residencia en cascada, con todas las entidades relacionadas a el.
      parameters:
        - name: idResidencia
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Residencia borrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Residencia.ResponseDto'
        '404':
          description: Residencia invalida, no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/residents/add:
    post:
      tags:
        - Residente
      summary: Registrar un nuevo residente.
      description: Crea un residente en una residencia existente en la base de datos, con ciertos campos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Residente.Dto'
      responses:
        '200':
          description: Residente registrado con existo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Residente.ResponseDto'
        '400':
          description: Campos nulos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Residencia invalida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0
        '406':
          description: Fecha invalida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                FECHA_INVALIDO:
                  value:
                    mensaje: Fecha invalida
                    codigo: 1005
                    status: 406
                    timestamp: 2025-04-13T21:00:00
  /resi/residents:
    get:
      tags:
        - Residente
      summary: Obtener residentes
      description: Devuelve una lista de residentes. Si pones el id del residente te de vuelve solo el residnete. Si pones el id de la residencia te devuelve una lsita de residentes de esa residencia.
      parameters:
        - name: idResidencia
          in:  query
          required: false
          schema:
            type: integer
            format: int64
        - name: idResidente
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Residente(s) econtrado(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Residente.ResponseDto'
        '400':
          description: Error al recuperar residentes
          content:
            application/json:
              schema:
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/residents/remove:
    delete:
      tags:
        - Residente
      summary: Eliminar un Residente.
      description: Elimina un Residente en cascada, con todas las entidades relacionadas que dependan de el.
      parameters:
        - name: idResidente
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Residente borrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Residente.ResponseDto'
        '404':
          description: Residente invalida, no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residente invalida
                    codigo: 1009
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0
  /resi/users:
    get:
      tags:
        - User
      summary: Obtener ususarios.
      description: Devuelve una lista de residentes. Con filtrado.
      parameters:
        - name: idResidencia
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: enable
          in: query
          required: false
          schema:
            type: boolean
        - name: email
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Usuario(s) econtrado(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User.ResponseDto'
        '400':
          description: Error al recuperar Usuarios.
          content:
            application/json:
              schema:
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/users/remove:
    delete:
      tags:
        - User
      summary: Eliminar un Usuario.
      description: Elimina un usuario en cascada, con todas las entidades relacionadas a el. Pero el registro de jeugo no se borra
      parameters:
        - name: idUsuario
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Usuario borrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User.ResponseDto'
        '404':
          description: Usuario invalido, no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Usuario invalida
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0
        '409':
          description: No se puede borrar una entidad que tiene referencia en otras entidades, antes hay que borrar esas relaciones.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                REFERENCIAS_DEPENDIENTES:
                  value:
                    mensaje: Esta entidad tiene referencias asociadas que dependen de el.
                    codigo: 1013
                    status: 409
                    timestamp: 2025-04-13T21:00:00

  /resi/users/remove/referencies:
    delete:
      tags:
        - User
      summary: Eliminar las referencias.
      description: Elimina las referencias de los registros de los juegos a null. para poder luego borrar este objeto.
      parameters:
        - name: idUsuario
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Usuario borrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User.ResponseDto'
        '404':
          description: Usuario invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalida
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/users/defualtImage:
    get:
      tags:
        - User
      summary: Obtienes la foto de perfil en binario
      description: obtienes la imagen de la ruta de tu usuario que actualmete es la default pero luego con otro endpoint puedes subir otra imagen y se cambairia a la ruta de esa imagen nueva. y que se obtendria la hacer el get este.
      responses:
        '200':
          description: Archibo binario con la foto.
          content:
            text/plain:
              schema:
                type: string
                example: Resource Binario
        '500':
          description: Problemas pasando la iamgen, prueba con cambiar la imagen a una imagen valida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: A surgido un problema con la imagen
                    codigo: 1021
                    status: PROBLEMAS_CON_FILE
                    timestamp: 2025-04-13T21:00:00



  /resi/juegos/add:
    post:
      tags:
        - Modulo Juego
      summary: Registrar un juego.
      description: Crea un nuevo Juego validando campos obligatiorios, unicidad y que la residencia donde se guarda exista.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Juego.Dto'
      responses:
        '200':
          description: Juego registrado con 茅xisto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Juego.ResponseDto'
        '400':
          description: Datos nulos/vacios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00

        '404':
          description: Residencia invalida, no existe en la base de datos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Residencia invalida
                    codigo: 1006
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0
        '409':
          description: El nombre que se le quiere asignar ya esrta registrado en esa residendcia
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                NOMBRE_DUPLICADO:
                  value:
                    mensaje: Nombre ya existente
                    codigo: 1004
                    status: 409
                    timestamp: 2025-04-13T21:00:00
  /resi/juegos:
    get:
      tags:
        - Modulo Juego
      summary: Obtener juegos
      description: Devuelve una lista de juegos. Si se indica el id de la residencia sacara una lista de juegos de esa residencia.
      parameters:
        - name: idJuego
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: idResidencia
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Juego(s) encontrado(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Juego.ResponseDto'
        '400':
          description: Error al recuperar los juegos.
          content:
            application/json:
              schema:
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/juegos/remove:
    delete:
      tags:
        - Modulo Juego
      summary: Eliminar una Juego.
      description: Elimina un juego en cascada, con todas las entidades relacionadas a el.
      parameters:
        - name: idJuego
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Juego borrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Juego.ResponseDto'
        '404':
          description: Juego invalido, no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                RESIDENCIA_INVALIDO:
                  value:
                    mensaje: Juego invalido
                    codigo: 1008
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/juegos/stats/add:
    post:
      tags:
        - Modulo Juego
      summary: Registrar un nuevo registro de juego.
      description: Crea un nuevo registro de juego validando campos obligatorios,existencia de las referencias y valores validos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistroJuego.Dto'
      responses:
        '200':
          description: Registro de juego registrado con 茅xito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistroJuego.ResponseDto'
        '400':
          description: Error de validacion o datos nulos/vacios o conflicto de referencias.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00

        '404':
          description: Juego, Residente o Usuario invalido, no esixte ninguna referencia en la base de datos de estas entidades
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                JUEGO_INVALIDO:
                  value:
                    mensaje: Juego invalida
                    codigo: 1008
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                RESIDENTE_INVALIDO:
                  value:
                    mensaje: Residente invalida
                    codigo: 1009
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                USUARIO_INVALIDO:
                  value:
                    mensaje: Usuario invalida
                    codigo: 1010
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0
        '406':
          description: No valores negativos en el el campo de puntos/num
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                VALORES_NEGATIVOS:
                  value:
                    mensaje: No puede ser valores negativos
                    codigo: 1007
                    status: 406
                    timestamp: 2025-04-13T21:00:00

        '409':
          description: Conflicto con las referencias de la residencia, no coinciden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CORREO_DUPLICADO:
                  value:
                    mensaje: Problemas con las referencias de las entidades, no corresponden a las mismas
                    codigo: 1011
                    status: 409
                    timestamp: 2025-04-13T21:00:00

  /resi/juegos/stats:
    get:
      tags:
        - Modulo Juego
      summary: Obtener juegos
      description: Devuelve una lista de juegos. Si se indica el id de la residencia sacara una lista de juegos de esa residencia.
      parameters:
        - name: idResidente
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: idResidencia
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: idJuego
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: year
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: month
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: day
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Registro(s) Juego(s) encontrado(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegistroJuego.ResponseDto'
        '400':
          description: Error al recuperar los registros de los juegos.
          content:
            application/json:
              schema:
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/juegos/stats/remove:
    delete:
      tags:
        - Modulo Juego
      summary: Eliminar una Registro de juego.
      description: Elimina un Registro de juego.
      parameters:
        - name: idRegistroJuego
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Registro Juego borrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistroJuego.ResponseDto'
        '404':
          description: Registro Juego invalido, no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                REGISTRO_JUEGO_INVALIDO:
                  value:
                    mensaje: Registro Juego invalido
                    codigo: 1012
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '405':
          description: Este endPoint esta protegido por ciertas cosas, debe tener un token. Que se le proporciona cada vez que hace  login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                ENDPOINT_PROTEGIDO:
                  value:
                    mensaje: Tiene que tener permiso para acceder aqui.
                    codigo: 1020
                    status: 405
                    timestamp: 2025-04-13T21:00:0

  /resi/{idResidencia}/evento/{idSalida}/participante/add:
    post:
      tags:
        - Modulo Evento Salida
      summary: A帽adir un participante
      description: Registra un nuevo participante en un evento de salida.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idSalida
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participante.Dto'
      responses:
        '200':
          description: Participante a帽adido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participante.ResponseDto'
        '400':
          description: Datos nulos/vacios o el evento no esta disponible.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
                EVENTO_SALIDA_NO_DISPONIBLE:
                  value:
                    mensaje: No se puede hacer nada con este evento ciertos problemas
                    codigo: 1024
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
            description: Evento/Residente no existe en esa residencia.
            content:
              application/json:
                schema:
                    $ref: '#/components/schemas/Error.ResponseDto'
                examples:
                  EVENTO_SALIDA_INVALIDO:
                    value:
                      mensaje: Evento de salida invalido
                      codigo: 1023
                      status: 404
                      timestamp: 2025-04-13T21:00:00
                  RESIDENTE_INVALIDO:
                    value:
                      mensaje: Residente invalido
                      codigo: 1009
                      status: 404
                      timestamp: 2025-04-13T21:00:00
        '406':
            description: Este residente ya participa en otro evento ese mismo dia
            content:
              application/json:
                schema:
                    $ref: '#/components/schemas/Error.ResponseDto'
                example:
                  PARTICIPANTE_REGISTRADO:
                    value:
                      mensaje: Este residente ya participa en otro evento ese mismo dia
                      codigo: 1022
                      status: 406
                      timestamp: 2025-04-13T21:00:00


  /resi/{idResidencia}/evento/{idSalida}/participante/{idParticipante}/get:
    get:
      tags:
        - Modulo Evento Salida
      summary: Obtener un participante
      description: Obtiene los datos de un participante espec铆fico en un evento de salida.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idSalida
          in: path
          required: true
          schema:
            type: integer
        - name: idParticipante
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Participante encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participante.ResponseDto'
        '400':
          description: campos nulos/vacios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Evento/Participante no  existe en esa residencia.
          content:
              application/json:
                  schema:
                      $ref: '#/components/schemas/Error.ResponseDto'
                  examples:
                    EVENTO_SALIDA_INVALIDO:
                      value:
                        mensaje: Evento de salida invalido
                        codigo: 1023
                        status: 404
                        timestamp: 2025-04-13T21:00:00
                    PARTICIPANTE_INVALIDO:
                      value:
                          mensaje: Participante invalido
                          codigo: 1025
                          status: 404
                          timestamp: 2025-04-13T21:00:00
  /resi/{idResidencia}/evento/{idSalida}/participante/getAll:
    get:
      tags:
        - Modulo Evento Salida
      summary: Listar participantes
      description: Lista todos los participantes de un evento de salida, con filtros opcionales.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idSalida
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participante.GetDto'
      responses:
        '200':
          description: Lista de participantes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participante.ResponseDto'
        '400':
          description: Campos nulos/vacios.
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/Error.ResponseDto'
                example:
                  CAMPOS_OBLIGATORIOS:
                  value:
                    mensaje: Faltan campos obligatorios
                    codigo: 1001
                    status: 400
                    timestamp: 2025-04-13T21:00:00
        '404':
          description: Evento invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                EVENTO_SALIDA_INVALIDO:
                  value:
                    mensaje: Evento de salida invalido
                    codigo: 1023
                    status: 404
                    timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/evento/{idSalida}/participante/{idParticipante}/update:
    patch:
      tags:
        - Modulo Evento Salida
      summary: Actualizar participante
      description: Actualiza los datos de un participante existente en un evento de salida.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idSalida
          in: path
          required: true
          schema:
            type: integer
        - name: idParticipante
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participante.UpdateDto'
      responses:
        '200':
          description: Participante actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participante.ResponseDto'
        '400':
          description: campos nulos/vacios o el evento no esta disponible.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                  CAMPOS_OBLIGATORIOS:
                    value:
                        mensaje: Faltan campos obligatorios
                        codigo: 1001
                        status: 400
                        timestamp: 2025-04-13T21:00:00
                  EVENTO_SALIDA_NO_DISPONIBLE:
                    value:
                        mensaje: No se puede hacer nada con este evento ciertos problemas
                        codigo: 1024
                        status: 400
                        timestamp: 2025-04-13T21:00:00
        '404':
          description: Evento/Particicpante Invalido
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                  EVENTO_SALIDA_INVALIDO:
                    value:
                        mensaje: Evento de salida invalido
                        codigo: 1023
                        status: 404
                        timestamp: 2025-04-13T21:00:00
                  PARTICIPANTE_INVALIDO:
                    value:
                        mensaje: Participante invalido
                        codigo: 1025
                        status: 404
                        timestamp: 2025-04-13T21:00:00

  /resi/{idResidencia}/evento/{idSalida}/participante/{idParticipante}/delete:
    delete:
      tags:
        - Modulo Evento Salida
      summary: Eliminar participante
      description: Elimina un participante de un evento de salida.
      parameters:
        - name: idResidencia
          in: path
          required: true
          schema:
            type: integer
        - name: idSalida
          in: path
          required: true
          schema:
            type: integer
        - name: idParticipante
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Participante eliminado correctamente
        '404':
          description: Evento/Particicpante Invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              examples:
                EVENTO_SALIDA_INVALIDO:
                  value:
                    mensaje: Evento de salida invalido
                    codigo: 1023
                    status: 404
                    timestamp: 2025-04-13T21:00:00
                PARTICIPANTE_INVALIDO:
                  value:
                    mensaje: Participante invalido
                    codigo: 1025
                    status: 404
                    timestamp: 2025-04-13T21:00:00
        '406':
          description: Participante inmutable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error.ResponseDto'
              example:
                PARTICIPANTE_INMUTABLE:
                  value:
                    mensaje: No se puede hacer esta operacion con el participante porque ahora mismo es inmutable
                    codigo: 1026
                    status: 406
                    timestamp: 2025-04-13T21:00:00








components:
  schemas:
    Verify.Dto:
      type: object
      required:
        -email
        -verificationConde
      properties:
        email:
          type: string
          example: kevinolarte.ko@gmail.com
        verificationCode:
          type: string
          example: 6394829

    Login.Dto:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: contacto@resilapaz.com
        password:
          type: string
          example: 1234Residencia

    Login.ResponseDto:
      type: object
      required:
        - token
        - expiresIn
      properties:
        token:
          type: string
          example: yJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6Imtldmlub2xhcnRlLmtvQGdtYWlsLmNvbSIsInN1YiI6Imtldmlub2xhcnRlLmtvQGdtYWlsLmNvbSIsImlhdCI6MTc0NTA3NTc1NywiZXhwIjoxNzQ1MTYyMTU3fQ._jxW3tu7hG8NPVPZaNc6iMS5HjAyiQycUZl4SFc_a8
        expiresIn:
          type: integer
          format: int64
          example: 6400000

    Residencia.Dto:
      type: object
      required:
        - nombre
        - email
      properties:
        nombre:
          type: string
          example: Residencia La Paz
        email:
          type: string
          example: contacto@resilapaz.com

    Residencia.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nombre:
          type: string
          example: Residencia La Paz
        email:
          type: string
          example: contacto@resilapaz.com

    Residente.Dto:
      type: object
      required:
        - nombre
        - apellido
        - fechaNacimiento
        - idResidencia
      properties:
        nombre:
          type: string
          example: Carlos
        apellido:
          type: string
          example: P茅rez
        fechaNacimiento:
          type: string
          format: date
          example: 1945-06-15
        idResidencia:
          type: integer
          format: int64
          example: 1

    Residente.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 101
        nombre:
          type: string
          example: Carlos
        apellido:
          type: string
          example: P茅rez
        fechaNacimiento:
          type: string
          format: date
          example: 1945-06-15
        idResidencia:
          type: integer
          format: int64
          example: 1

    User.Dto:
      type: object
      required:
        - nombre
        - apellido
        - email
        - password
        - idResidencia
      properties:
        nombre:
          type: string
          example: Juan
        apellido:
          type: string
          example: Garc铆a
        email:
          type: string
          format: email
          example: juan.garcia@ejemplo.com
        password:
          type: string
          example: 1234secure
        idResidencia:
          type: integer
          format: int64
          example: 2

    User.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5
        nombre:
          type: string
          example: Juan
        apellido:
          type: string
          example: Garc铆a
        email:
          type: string
          format: email
          example: juan.garcia@ejemplo.com
        enabled:
          type: boolean
          example: true
        idResidencia:
          type: integer
          format: int64
          example: 2
    Juego.Dto:
      type: object
      required:
        - nombre
        - idResidencia
      properties:
        nombre:
          type: string
          example: Memoria Visual
        idResidencia:
          type: integer
          format: int64
          example: 3

    Juego.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nombre:
          type: string
          example: Memoria Visual
        idResidencia:
          type: integer
          format: int64
          example: 3

    RegistroJuego.Dto:
      type: object
      properties:
        idJuego:
          type: integer
          format: int64
          example: 1
        idResidente:
          type: integer
          format: int64
          example: 5
        idUsuario:
          type: integer
          format: int64
          example: 3
        fallos:
          type: integer
          example: 2
        duracion:
          type: number
          format: double
          example: 120.5
        dificultad:
          type: string
          enum: [ FACIL, MEDIA, DIFICIL ]
          example: MEDIA

    RegistroJuego.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 42
        idResidente:
          type: integer
          format: int64
          example: 5
        idJuego:
          type: integer
          format: int64
          example: 1
        idUsario:
          type: integer
          format: int64
          example: 3
        num:
          type: integer
          example: 2
        duracion:
          type: number
          format: double
          example: 120.5
        dificultad:
          type: integer
          format: int64
          example: 1
        fecha:
          type: string
          format: date-time
          example: "2025-04-16T10:15:30"

    Participante.Dto:
      type: object
      properties:
        idResidente:
          type: integer
          example: 1
        asistencia:
          type: boolean
          example: true
        preOpinion:
          type: string
          example: Me va gustar mucho

    Participante.GetDto:
      type: object
      properties:
        asistencia:
          type: boolean
          example: true

    Participante.UpdateDto:
      type: object
      properties:
        asistencia:
          type: boolean
          example: true
        preOpinion:
          type: string
          example: Me va gustar mucho
        postOpinion:
            type: string
            example: Me gusto mucho

    Participante.ResponseDto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        idSalida:
            type: integer
            example: 1
        idResidente:
            type: integer
            example: 1
        ayuda:
            type: boolean
            example: true
        preOpinion:
            type: string
            example: Me va gustar mucho
        postOpinion:
            type: string
            example: Me gusto mucho



    Error.ResponseDto:
      type: object
      properties:
        mensaje:
          type: string
        codigo:
          type: integer
        status:
          type: integer
        timestamp:
          type: string
          format: date-time
      example:
        mensaje: Faltan campos obligatorios
        codigo: 1001
        status: 400
        timestamp: 2025-04-13T21:00:00
